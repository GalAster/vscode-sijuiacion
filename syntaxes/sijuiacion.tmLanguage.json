{
    "name": "Sijuiacion",
    "scopeName": "source.sij",
    "version": "v0.0.1",
    "uuid": "",
    "information_for_contributors": [
        "aster: galaster@foxmail.com"
    ],
    "foldingStartMarker": "/\\*\\*|\\{\\s*$",
    "foldingStopMarker": "\\*\\*/|^\\s*\\}",
    "keyEquivalent": "^~S",
    "fileTypes": [
        "sij"
    ],
    "patterns": [
        {
            "include": "#code"
        }
    ],
    "repository": {
        "code": {
            "patterns": [
                {
                    "include": "#keywords"
                },
                {
                    "include": "#number"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#constant"
                },
                {
                    "include": "#variable"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "match": "\\b(const|store|deref|defun|runtime|deref|free|load|tuple|print|label|call|return|args|prj|goto-if-not|goto-if|goto)\\b",
                    "name": "keyword.control.flow.sij"
                },
                {
                    "match": "\\b(filename|line|label|labels|label)\\b",
                    "name": "support.function.sij"
                }
            ]
        },
        "number": {
            "match": "\\b([0-9]+)\\b",
            "name": "constant.numeric.sij"
        },
		"string": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.sij"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.sij"
				}
			},
			"name": "string.quoted.double.sij",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
        },
        "stringcontent": {
			"patterns": [
				{
					"match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
					"name": "constant.character.escape.json"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.unrecognized-string-escape.json"
				}
			]
		},
		"constant": {
			"begin": "#",
			"beginCaptures": {
				"0": {
					"name": "entity.name.type.class.start.sij"
				}
			},
			"end": "#",
			"endCaptures": {
				"0": {
					"name": "entity.name.type.class.end.sij"
				}
			},
			"name": "entity.name.type.class.sij"
        },
        "variable": {
            "match": "\\b(\\w+)\\b",
            "name": "variable.other.readwrite.sij"
        }
    }
}
